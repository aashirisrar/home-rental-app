// schema.prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       String  @id @unique @default(cuid())
  name     String? @unique
  email    String  @unique
  password String?
  phone    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName      String?
  lastName       String?
  bio            String?
  profilePicture String? @default("/user.png")

  active Boolean @default(false)

  Session       Session[]
  ActivateToken ActivateToken[]
  Property      Property[]
  Rental        Rental[]
}

model ActivateToken {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rental {
  rentalId String @id @unique @default(cuid())

  startDate DateTime
  endDate   DateTime

  totalRent Int

  userId     String
  propertyId String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property @relation(fields: [propertyId], references: [propertyId], onDelete: Cascade)
}

model Property {
  propertyId String  @id @unique @default(cuid())
  title      String
  details    String
  address    String
  type       String
  image      String
  rent       Int     @default(0)
  isRented   Boolean @default(false)
  rooms      Int     @default(0)

  userId String // the user to which the property belongs
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  Rental Rental[]
}
